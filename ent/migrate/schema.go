// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PhotosMetadataColumns holds the columns for the "photos_metadata" table.
	PhotosMetadataColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "tags", Type: field.TypeJSON, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "width", Type: field.TypeInt},
		{Name: "height", Type: field.TypeInt},
		{Name: "image_format", Type: field.TypeEnum, Enums: []string{"jpeg"}},
		{Name: "origin_server", Type: field.TypeString},
		{Name: "relative_url", Type: field.TypeString},
		{Name: "uploaded_at", Type: field.TypeTime},
		{Name: "owner_id", Type: field.TypeUUID, Nullable: true},
	}
	// PhotosMetadataTable holds the schema information for the "photos_metadata" table.
	PhotosMetadataTable = &schema.Table{
		Name:       "photos_metadata",
		Columns:    PhotosMetadataColumns,
		PrimaryKey: []*schema.Column{PhotosMetadataColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "photos_metadata_profiles_photos",
				Columns:    []*schema.Column{PhotosMetadataColumns[9]},
				RefColumns: []*schema.Column{ProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProfilesColumns holds the columns for the "profiles" table.
	ProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "picture_url", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString, Default: ""},
		{Name: "biography", Type: field.TypeString, Default: ""},
		{Name: "email", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "phone", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "is_email_verified", Type: field.TypeBool, Default: false},
		{Name: "is_phone_verified", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
	}
	// ProfilesTable holds the schema information for the "profiles" table.
	ProfilesTable = &schema.Table{
		Name:       "profiles",
		Columns:    ProfilesColumns,
		PrimaryKey: []*schema.Column{ProfilesColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PhotosMetadataTable,
		ProfilesTable,
	}
)

func init() {
	PhotosMetadataTable.ForeignKeys[0].RefTable = ProfilesTable
}
